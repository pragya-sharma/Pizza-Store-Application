{"version":3,"sources":["image.jpg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","pizza","setPizza","newData","setNewData","getData","a","fetch","response","json","useEffect","filterItem","categoryItem","updateItems","filter","curElem","isVeg","class","href","style","color","className","src","logo","alt","onClick","map","item","id","name","img_url","description","price","rating","size","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAAe,MAA0B,kC,OCuH1BA,EApHH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAAO,uCAAG,4BAAAC,EAAA,sEACSC,MACrB,gEAFY,cACRC,EADQ,YAIdN,EAJc,SAICM,EAASC,OAJV,6EAAH,qDAMbC,qBAAU,WACRL,MACC,IAEH,IAAMM,EAAa,SAACC,GAClB,IAAMC,EAAcZ,EAAMa,QAAO,SAACC,GAEhC,OAAOA,EAAQC,QAAUJ,KAE3BR,EAAWS,IAQb,OACE,iCACE,qBAAII,MAAM,6BAAV,UACJ,oBAAIA,MAAM,WAAV,SACE,mBAAGA,MAAM,kBAAmBC,KAAK,IAAIC,MAAO,CAACC,MAAO,OAApD,oBAEF,oBAAIH,MAAM,WAAV,SACE,mBAAGA,MAAM,WAAWC,KAAK,IAAIC,MAAO,CAACC,MAAO,OAA5C,wBAEF,oBAAIH,MAAM,WAAV,SACE,mBAAGA,MAAM,WAAWC,KAAK,IAAIC,MAAO,CAACC,MAAO,OAA5C,uBAEF,oBAAIH,MAAM,WAAV,SACE,mBAAGA,MAAM,WAAWC,KAAK,GAAGC,MAAO,CAACC,MAAO,OAA3C,8BAGE,0BAASC,UAAU,eAAnB,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKC,IAAKC,EAAMC,IAAI,OAAOH,UAAU,SACrC,2CACA,qBAAKA,UAAU,iBAGjB,sBAAKA,UAAU,gBAAf,UACE,wBAAQA,UAAU,aAAaI,QAAS,kBAAMrB,EAAWH,IAAzD,iBAGA,wBAAQoB,UAAU,aAAaI,QAAS,kBAAMd,GAAW,IAAzD,iBAGA,wBAAQU,UAAU,aAAaI,QAAS,kBAAMd,GAAW,IAAzD,wBAKF,qBAAKU,UAAU,iBAAf,SACGlB,EAAQuB,KAAI,SAACC,GACZ,IAAQC,EACND,EADMC,GAAIC,EACVF,EADUE,KAAMC,EAChBH,EADgBG,QAASC,EACzBJ,EADyBI,YAAaC,EACtCL,EADsCK,MAAOC,EAC7CN,EAD6CM,OAAQjB,EACrDW,EADqDX,MACrDW,EAD4DO,KAM9D,OAGE,0BAAkBb,UAAU,YAA5B,UACE,qBAAKC,IAAKQ,EAASN,IAAKK,EAAMR,UAAU,UACxC,sBAAKA,UAAU,YAAf,UACE,mCACE,6BAAKQ,IACL,qBAAIR,UAAU,QAAd,oBAAyBW,QAE3B,mBAAGX,UAAU,YAAb,SAA0BU,IAG1B,sBAAKd,MAAM,YAAX,UAChB,wBAAQA,MAAM,qDAAqDkB,KAAK,SAAS,cAAY,WAAW,gBAAc,OAAO,gBAAc,QAA3I,yBAGA,qBAAKlB,MAAM,gBAAX,SACE,iCACF,uBAAOkB,KAAK,UADV,iBAEF,uBACA,uBAAOA,KAAK,UAHV,gBAIF,uBACA,uBAAOA,KAAK,UALV,uBAYc,mCACE,qBAAId,UAAU,SAAd,oBAA0BY,KAC1B,qBAAIZ,UAAU,SAAd,UACG,IADH,SAESL,EAAQ,YAAc,2BA/BvBY,eC/DbQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.8f53ab48.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/image.da688548.jpg\";","import React, { useEffect, useState } from \"react\";\nimport logo from \"./image.jpg\";\n\nconst App = () => {\n  const [pizza, setPizza] = useState([]);\n  const [newData, setNewData] = useState([]);\n  const getData = async () => {\n    const response = await fetch(\n      \"https://run.mocky.io/v3/ec196a02-aaf4-4c91-8f54-21e72f241b68\"\n    );\n    setPizza(await response.json());\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const filterItem = (categoryItem) => {\n    const updateItems = pizza.filter((curElem) => {\n\n      return curElem.isVeg === categoryItem;\n    });\n    setNewData(updateItems);\n  };\n\n\n\n\n\n\n  return (\n    <main>\n      <ul class=\"nav justify-content-center\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\"  href=\"#\" style={{color: \"red\"}}>Home</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" href=\"#\" style={{color: \"red\"}}>About Us</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" href=\"#\" style={{color: \"red\"}}>Contact</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" href=\"\" style={{color: \"red\"}}>Catagorical</a>\n  </li>\n</ul>\n      <section className=\"menu section\">\n        <div className=\"title\">\n          <img src={logo} alt=\"logo\" className=\"logo\" />\n          <h2>Menu List</h2>\n          <div className=\"underline\"></div>\n        </div>\n\n        <div className=\"btn-container\">\n          <button className=\"filter-btn\" onClick={() => setNewData(pizza)}>\n            All\n          </button>\n          <button className=\"filter-btn\" onClick={() => filterItem(true)}>\n            Veg\n          </button>\n          <button className=\"filter-btn\" onClick={() => filterItem(false)}>\n            Non-Veg\n          </button>\n        </div>\n\n        <div className=\"section-center\">\n          {newData.map((item) => {\n            const { id, name, img_url, description, price, rating, isVeg, size } =\n              item;\n\n\n\n\n            return (\n\n\n              <article key={id} className=\"menu-item\">\n                <img src={img_url} alt={name} className=\"photo\" />\n                <div className=\"item-info\">\n                  <header>\n                    <h4>{name}</h4>\n                    <h4 className=\"price\">₹ {price}</h4>\n                  </header>\n                  <p className=\"item-text\">{description}</p>\n\n\n                  <div class=\"btn-group\">\n  <button class=\"btn button-css button-css-1 btn-sm dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n    Choose Size\n  </button>\n  <div class=\"dropdown-menu\">\n    <form>\n  <input type=\"radio\" />  Regular Size\n  <br />\n  <input type=\"radio\" />  Medium Size\n  <br />\n  <input type=\"radio\" />  Small Size\n \n  </form>\n  </div>\n  </div>\n\n\n                  <header>\n                    <h4 className=\"rating\">⭐ {rating}</h4>\n                    <h4 className=\"rating\">\n                      {\" \"}\n                      Type: {isVeg ? \"Veg Pizza\" : \"Non-Veg Pizza\"}\n                    </h4>\n                  </header>\n                </div>\n              </article>\n            );\n          })}\n        </div>\n      </section>\n    </main>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}